[
{ "include": ["@<google/protobuf/.*>", "private", "\"internal/serialization/protobuf/Proto.hpp\"", "public"] },
{ "include": ["<google/protobuf/repeated_field.h>", "private", "\"internal/serialization/protobuf/Proto.hpp\"", "public"] },
{ "include": ["@<boost/algorithm/string/.*>", "private", "<boost/algorithm/string.hpp>", "public"] },
{ "include": ["@<boost/asio/.*>", "private", "\"BoostAsio.hpp\"", "public"] },
{ "include": ["@<boost/beast/.*>", "private", "\"BoostAsio.hpp\"", "public"] },
{ "include": ["@<boost/bind/.*>", "private", "<boost/bind/bind.hpp>", "public"] },
{ "include": ["@<boost/dynamic_bitset/.*>", "private", "<boost/dynamic_bitset.hpp>", "public"] },
{ "include": ["@<boost/endian/detail/.*>", "private", "<boost/endian/buffers.hpp>", "public"] },
{ "include": ["@<boost/filesystem/.*>", "private", "<boost/filesystem.hpp>", "public"] },
{ "include": ["@<boost/iostreams/.*>", "private", "\"BoostIostreams.hpp\"", "public"] },
{ "include": ["@<boost/json/.*>", "private", "<boost/json.hpp>", "public"] },
{ "include": ["@<boost/multiprecision/.*>", "private", "<boost/multiprecision/cpp_int.hpp>", "public"] },
{ "include": ["@<boost/program_options/.*>", "private", "<boost/program_options.hpp>", "public"] },
{ "include": ["@<boost/stacktrace/.*>", "private", "\"BoostStacktrace.hpp\"", "public"] },
{ "include": ["@<boost/thread/.*>", "private", "<boost/thread/thread.hpp>", "public"] },
{ "include": ["<boost/container/detail/std_fwd.hpp>", "private", "<boost/container/container_fwd.hpp>", "public"] },
{ "include": ["<boost/core/detail/string_view.hpp>", "private", "<boost/utility/string_view.hpp>", "public"] },
{ "include": ["<boost/intrusive/detail/list_iterator.hpp>", "private", "<boost/intrusive/list.hpp>", "public"] },
{ "include": ["<boost/smart_ptr/detail/operator_bool.hpp>", "private", "<boost/smart_ptr/shared_ptr.hpp>", "public"] },
{ "include": ["<boost/smart_ptr/make_shared_object.hpp>", "private", "<boost/smart_ptr/make_shared.hpp>", "public"] },
{ "include": ["<boost/system/detail/errc.hpp>", "private", "<boost/system/error_code.hpp>", "public"] },
{ "include": ["<boost/system/detail/error_code.hpp>", "private", "<boost/system/error_code.hpp>", "public"] },
{ "include": ["<boost/system/errc.hpp>", "private", "<boost/system/error_code.hpp>", "public"] },
{ "include": ["@<chaiscript/.*>", "private", "<chaiscript/chaiscript.hpp>", "public"] },
{ "include": ["@<opendht/.*>", "private", "<opendht.h>", "public"] },
{ "include": ["@<sodium/.*>", "private", "<sodium.h>", "public"] },
{ "include": ["@<gmock/.*>", "private", "<gmock/gmock.h>", "public"] },
{ "include": ["@<gtest/.*>", "private", "<gtest/gtest.h>", "public"] },
{ "include": ["@<oneapi/tbb.*>", "private", "<oneapi/tbb.h>", "public"] },
{ "include": ["@<tbb/.*>", "private", "<tbb/tbb.h>", "public"] },
{ "include": ["<QtCore/qglobal.h>", "private", "<QtGlobal>", "public"] },
{ "include": ["<qabstractitemmodel.h>", "private", "<QAbstractItemModel>", "public"] },
{ "include": ["<qbytearray.h>", "private", "<QByteArray>", "public"] },
{ "include": ["<qchar.h>", "private", "<QChar>", "public"] },
{ "include": ["<qcontainerfwd.h>", "private", "<QStringList>", "public"] },
{ "include": ["<qcoreapplication.h>", "private", "<QCoreApplication>", "public"] },
{ "include": ["<qdatetime.h>", "private", "<QDateTime>", "public"] },
{ "include": ["<qflags.h>", "private", "<QtGlobal>", "public"] },
{ "include": ["<qglobal.h>", "private", "<QtGlobal>", "public"] },
{ "include": ["<qhash.h>", "private", "<QHash>", "public"] },
{ "include": ["<qidentityproxymodel.h>", "private", "<QIdentityProxyModel>", "public"] },
{ "include": ["<qjsengine.h>", "private", "<QJSEngine>", "public"] },
{ "include": ["<qlist.h>", "private", "<QList>", "public"] },
{ "include": ["<qmetatype.h>", "private", "<QObject>", "public"] },
{ "include": ["<qnamespace.h>", "private", "<QObject>", "public"] },
{ "include": ["<qobject.h>", "private", "<QObject>", "public"] },
{ "include": ["<qobjectdefs.h>", "private", "<QObject>", "public"] },
{ "include": ["<qqmlengine.h>", "private", "<QQmlEngine>", "public"] },
{ "include": ["<qstring.h>", "private", "<QString>", "public"] },
{ "include": ["<qstringlist.h>", "private", "<QStringList>", "public"] },
{ "include": ["<qstringview.h>", "private", "<QStringView>", "public"] },
{ "include": ["<qtmetamacros.h>", "private", "<QMetaObject>", "public"] },
{ "include": ["<qtypes.h>", "private", "<QtGlobal>", "public"] },
{ "include": ["<qvalidator.h>", "private", "<QValidator>", "public"] },
{ "include": ["<qvariant.h>", "private", "<QVariant>", "public"] },
{ "include": ["<qvector.h>", "private", "<QVector>", "public"] },
{ "include": ["<bits/chrono.h>", "private", "<chrono>", "public"] },
{ "include": ["<bits/exception.h>", "private", "<stdexcept>", "public"] },
{ "include": ["<bits/std_thread.h>", "private", "<thread>", "public"] },
{ "include": ["<bits/this_thread_sleep.h>", "private", "<thread>", "public"] },
{ "include": ["<bits/utility.h>", "private", "<utility>", "public"] },
{ "include": ["<bits/memory_resource.h>", "private", "<memory_resource>", "public"] },
{ "include": ["<ext/alloc_traits.h>", "private", "<memory>", "public"] },
{ "include": ["<ext/new_allocator.h>", "private", "<new>", "public"] },
{ "include": ["<ext/type_traits.h>", "private", "<type_traits>", "public"] },
{ "symbol": ["__forced_unwind", "private", "<stdexcept>", "public"] },
{ "symbol": ["int8_t", "private", "<cstdint>", "public"] },
{ "symbol": ["uint8_t", "private", "<cstdint>", "public"] },
{ "symbol": ["int16_t", "private", "<cstdint>", "public"] },
{ "symbol": ["uint16_t", "private", "<cstdint>", "public"] },
{ "symbol": ["int32_t", "private", "<cstdint>", "public"] },
{ "symbol": ["uint32_t", "private", "<cstdint>", "public"] },
{ "symbol": ["int64_t", "private", "<cstdint>", "public"] },
{ "symbol": ["uint64_t", "private", "<cstdint>", "public"] },
{ "symbol": ["opentxs::AccountType", "private", "\"opentxs/core/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::AddressType", "private", "\"opentxs/core/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::Bip32Child", "private", "\"opentxs/crypto/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::Bip43Purpose", "private", "\"opentxs/crypto/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::Bip44Type", "private", "\"opentxs/crypto/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::BlockchainProfile", "private", "\"opentxs/util/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::ConnectionMode", "private", "\"opentxs/util/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::UnitType", "private", "\"opentxs/core/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::WorkType", "private", "\"opentxs/util/WorkType.hpp\"", "public"] },
{ "symbol": ["opentxs::blockchain::Type", "private", "\"opentxs/blockchain/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::blockchain::bitcoin::block::script::OP", "private", "\"opentxs/blockchain/bitcoin/block/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::blockchain::bitcoin::block::script::Pattern", "private", "\"opentxs/blockchain/bitcoin/block/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::blockchain::bitcoin::block::script::Position", "private", "\"opentxs/blockchain/bitcoin/block/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::blockchain::cfilter::Type", "private", "\"opentxs/blockchain/bitcoin/cfilter/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::blockchain::crypto::AddressStyle", "private", "\"opentxs/blockchain/crypto/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::blockchain::crypto::HDProtocol", "private", "\"opentxs/blockchain/crypto/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::blockchain::crypto::SubaccountType", "private", "\"opentxs/blockchain/crypto/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::blockchain::crypto::Subchain", "private", "\"opentxs/blockchain/crypto/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::blockchain::node::SendResult", "private", "\"opentxs/blockchain/node/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::blockchain::node::TxoState", "private", "\"opentxs/blockchain/node/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::blockchain::node::TxoTag", "private", "\"opentxs/blockchain/node/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::blockchain::p2p::Network", "private", "\"opentxs/blockchain/p2p/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::contract::ProtocolVersion", "private", "\"opentxs/core/contract/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::contract::Type", "private", "\"opentxs/core/contract/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::contract::UnitType", "private", "\"opentxs/core/contract/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::contract::peer::ConnectionInfoType", "private", "\"opentxs/core/contract/peer/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::contract::peer::PeerObjectType", "private", "\"opentxs/core/contract/peer/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::contract::peer::PeerRequestType", "private", "\"opentxs/core/contract/peer/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::contract::peer::SecretType", "private", "\"opentxs/core/contract/peer/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::crypto::HashType", "private", "\"opentxs/crypto/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::crypto::Language", "private", "\"opentxs/crypto/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::crypto::ParameterType", "private", "\"opentxs/crypto/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::crypto::SecretStyle", "private", "\"opentxs/crypto/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::crypto::SeedStrength", "private", "\"opentxs/crypto/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::crypto::SeedStyle", "private", "\"opentxs/crypto/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::crypto::SignatureRole", "private", "\"opentxs/crypto/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::crypto::asymmetric::Algorithm", "private", "\"opentxs/crypto/asymmetric/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::crypto::asymmetric::Mode", "private", "\"opentxs/crypto/asymmetric/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::crypto::asymmetric::Role", "private", "\"opentxs/crypto/asymmetric/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::crypto::symmetric::Algorithm", "private", "\"opentxs/crypto/symmetric/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::crypto::symmetric::Source", "private", "\"opentxs/crypto/symmetric/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::identifier::Algorithm", "private", "\"opentxs/core/identifier/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::identifier::Type", "private", "\"opentxs/core/identifier/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::identity::CredentialRole", "private", "\"opentxs/identity/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::identity::CredentialType", "private", "\"opentxs/identity/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::identity::NymCapability", "private", "\"opentxs/identity/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::identity::SourceProofType", "private", "\"opentxs/identity/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::identity::SourceType", "private", "\"opentxs/identity/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::identity::Type", "private", "\"opentxs/identity/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::identity::wot::claim::Attribute", "private", "\"opentxs/identity/wot/claim/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::identity::wot::claim::ClaimType", "private", "\"opentxs/identity/wot/claim/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::identity::wot::claim::SectionType", "private", "\"opentxs/identity/wot/claim/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::network::blockchain::Protocol", "private", "\"opentxs/network/blockchain/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::network::blockchain::Transport", "private", "\"opentxs/network/blockchain/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::network::blockchain::bitcoin::Service", "private", "\"opentxs/network/blockchain/bitcoin/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::network::otdht::MessageType", "private", "\"opentxs/network/otdht/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::network::zeromq::zap::Policy", "private", "\"opentxs/network/zeromq/zap/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::otx::ConsensusType", "private", "\"opentxs/otx/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::otx::LastReplyStatus", "private", "\"opentxs/otx/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::otx::OTXPushType", "private", "\"opentxs/otx/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::otx::OperationType", "private", "\"opentxs/otx/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::otx::ServerReplyType", "private", "\"opentxs/otx/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::otx::ServerRequestType", "private", "\"opentxs/otx/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::otx::blind::CashType", "private", "\"opentxs/otx/blind/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::otx::blind::PurseType", "private", "\"opentxs/otx/blind/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::otx::blind::TokenState", "private", "\"opentxs/otx/blind/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::otx::client::PaymentWorkflowState", "private", "\"opentxs/otx/client/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::otx::client::PaymentWorkflowType", "private", "\"opentxs/otx/client/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::otx::client::StorageBox", "private", "\"opentxs/otx/client/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::rpc::AccountEventType", "private", "\"opentxs/interface/rpc/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::rpc::AccountType", "private", "\"opentxs/interface/rpc/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::rpc::CommandType", "private", "\"opentxs/interface/rpc/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::rpc::ContactEventType", "private", "\"opentxs/interface/rpc/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::rpc::PaymentType", "private", "\"opentxs/interface/rpc/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::rpc::PushType", "private", "\"opentxs/interface/rpc/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::rpc::ResponseCode", "private", "\"opentxs/interface/rpc/Types.hpp\"", "public"] },
{ "symbol": ["opentxs::ui::Blockchains", "private", "\"opentxs/interface/ui/Types.hpp\"", "public"] }
]
