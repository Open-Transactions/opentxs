// Copyright (c) 2010-2022 The Open-Transactions developers
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.

#pragma once

#include <chrono>
#include <cstdint>
#include <optional>
#include <type_traits>

#include "opentxs/Export.hpp"

namespace opentxs
{
using namespace std::literals::chrono_literals;

using Clock = std::chrono::@OPENTXS_TIME_TYPE@;
using sClock = std::chrono::steady_clock;
using Time = Clock::time_point;
using sTime = sClock::time_point;

OPENTXS_EXPORT auto seconds_since_epoch(Time) noexcept
    -> std::optional<std::int64_t>;
OPENTXS_EXPORT auto seconds_since_epoch(std::int64_t) noexcept
    -> std::optional<Time>;
OPENTXS_EXPORT auto seconds_since_epoch_unsigned(Time) noexcept
    -> std::optional<std::uint64_t>;
OPENTXS_EXPORT auto seconds_since_epoch_unsigned(std::uint64_t) noexcept
    -> std::optional<Time>;
OPENTXS_EXPORT auto sleep(const std::chrono::microseconds us) noexcept -> bool;
}  // namespace opentxs
