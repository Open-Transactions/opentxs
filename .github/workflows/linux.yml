name: linux

on: [push, pull_request]

jobs:
  compile:
    name: ${{ matrix.toolchain }}-${{ matrix.preset }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        toolchain: [gcc-11.3, gcc-12.2, clang-13, clang-14, clang-15]
        preset: [test01, test02, test03, test04, test05, test06, test07, test08, nopch, full]
        include:
          - toolchain: gcc-11.3
            docker: 35_3
            compiler: gcc
          - toolchain: gcc-12.2
            docker: 37_3
            compiler: gcc
          - toolchain: clang-13
            docker: 35_3
            compiler: clang
          - toolchain: clang-14
            docker: 36_3
            compiler: clang
          - toolchain: clang-15
            docker: 37_3
            compiler: clang
    steps:
    - name: Checkout opentxs
      uses: actions/checkout@v3
      with:
        fetch-depth: '0'
        submodules: 'recursive'
    - name: Get more disk space
      run: |
        sudo rm -rf "/usr/local/lib/android"
        sudo rm -rf "${JAVA_HOME_8_X64}"
        sudo rm -rf "${JAVA_HOME_11_X64}"
      shell: bash
      continue-on-error: true
    - name: Setup build environment
      run: |
        docker pull opentransactions/ci:${{ matrix.docker }}
    - name: Compile
      run: |
        mkdir -p /tmp/opentxs
        docker run --mount type=bind,src=${{ github.workspace }},dst=/home/src --mount type=bind,src=/tmp/opentxs,dst=/home/output -i opentransactions/ci:${{ matrix.docker }} ${{ matrix.compiler }} ${{ matrix.preset }}
  tidy:
    name: clang-tidy
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    env:
      docker: '37_3'
      compiler: clang
      preset: tidy
    steps:
    - name: Checkout opentxs
      uses: actions/checkout@v3
      with:
        fetch-depth: '0'
        submodules: 'recursive'
    - name: Get more disk space
      run: |
        sudo rm -rf "/usr/local/lib/android"
        sudo rm -rf "${JAVA_HOME_8_X64}"
        sudo rm -rf "${JAVA_HOME_11_X64}"
      shell: bash
      continue-on-error: true
    - name: Setup build environment
      run: |
        docker pull opentransactions/ci:${{ env.docker }}
    - name: Compile
      run: |
        mkdir -p /tmp/opentxs
        docker run --mount type=bind,src=${{ github.workspace }},dst=/home/src --mount type=bind,src=/tmp/opentxs,dst=/home/output -i opentransactions/ci:${{ env.docker }} ${{ env.compiler }} ${{ env.preset }}
  format:
    name: clang-format
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    env:
      docker: '37_3'
    steps:
    - name: Checkout opentxs
      uses: actions/checkout@v3
      with:
        fetch-depth: '0'
        submodules: 'recursive'
    - name: Get more disk space
      run: |
        sudo rm -rf "/usr/local/lib/android"
        sudo rm -rf "${JAVA_HOME_8_X64}"
        sudo rm -rf "${JAVA_HOME_11_X64}"
      shell: bash
      continue-on-error: true
    - name: Setup build environment
      run: |
        docker pull opentransactions/ci:${{ env.docker }}
    - name: Check formatting
      run: |
        mkdir -p /tmp/opentxs
        docker run --mount type=bind,src=${{ github.workspace }},dst=/home/src -i --entrypoint /usr/bin/check-formatting.sh opentransactions/ci:${{ env.docker }}
  includes:
    name: include-what-you-use
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    env:
      docker: '37_3'
    steps:
    - name: Checkout opentxs
      uses: actions/checkout@v3
      with:
        fetch-depth: '0'
        submodules: 'recursive'
    - name: Get more disk space
      run: |
        sudo rm -rf "/usr/local/lib/android"
        sudo rm -rf "${JAVA_HOME_8_X64}"
        sudo rm -rf "${JAVA_HOME_11_X64}"
      shell: bash
      continue-on-error: true
    - name: Setup build environment
      run: |
        docker pull opentransactions/ci:${{ env.docker }}
    - name: Check includes
      run: |
        mkdir -p /tmp/opentxs
        docker run --mount type=bind,src=${{ github.workspace }},dst=/home/src --mount type=bind,src=/tmp/opentxs,dst=/home/output -i --entrypoint /usr/bin/run-iwyu.sh opentransactions/ci:${{ env.docker }}
